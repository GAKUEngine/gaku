require 'rubygems'
require 'bundler'
require 'rake'
require 'rake/testtask'
require 'rake/packagetask'
require 'rubygems/package_task'
require 'rspec/core/rake_task'
require 'rspec/core/runner'
require 'gaku/core/testing_support/common_rake'

Bundler::GemHelper.install_tasks
RSpec::Core::RakeTask.new

spec = eval(File.read('gaku_core.gemspec'))
Gem::PackageTask.new(spec) do |p|
  p.gem_spec = spec
end

desc 'Release to gemcutter'
task :release do
  version = File.read(
    File.expand_path('../../GAKU_ENGINE_VERSION', __FILE__)).strip
  cmd = "cd pkg && gem push gaku_core-#{version}.gem"
  puts cmd
  system cmd
end

task default: :spec

desc 'Generates a dummy app for testing'
task :test_app do
  ENV['LIB_NAME'] = 'gaku/core'
  Rake::Task['common:test_app'].invoke
end

desc 'Run factory specs.'
RSpec::Core::RakeTask.new(:factory_specs) do |t|
  t.pattern = './spec/models/factories_spec.rb'
end

task spec: :factory_specs

desc 'Fork spec'
task :fork_spec do
  fork do
    RSpec::Core::Runner.disable_autorun!
    RSpec::Core::Runner.run(['spec'], $stderr, $stdout) ? exit(0) : exit(1)
  end
  Process.wait
  raise 'rspec failed' unless $?.exitstatus == 0
  # exiting the fork can cause MySql to drop the connection
  # but AR doesn't notice. This mitigates.
  ActiveRecord::Base.connection.reconnect! if ActiveRecord::Base.connected?
end

